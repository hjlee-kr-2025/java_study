1. 크기가 작은 자료형을 큰 자료형에 대입하는 형변환 자동으로 이루어 집니다.
(자동 형변환 - 묵시적 형변환 - 자동 캐스팅)
2. 실수를 정수에 대입할때는 명시적 형변환을 해야하고, 대입시 소수점 아래부분은
없어집니다.
(묵시적 형변환 - 강제 형변환 - 강제 캐스팅)
3. 실수 자료형은 가수부와 지수로 나뉘어 저장이 되는데 이것을 부동소수점이라고 합니다.
---> 부동소수점 연산시 약간의 오차가 발생될 수 있습니다.
4. 변수2개를 선언해서 10, 2.0을 대입하고 두 변수의 사칙연산 결과를 정수로 출력

자바 (JAVA)
- 자바스크립트와는 다른 언어 입니다.
- 자바코드를 컴파일을 해서 컴퓨터가 알수 있는 코드로 변환해야 합니다.
- 위 역할을 하는 것이 컴파일러 입니다.
- 자바를 개발하기 위해서는 PC에 컴파일러를 설치해야하는데
- 우리는 이것을 JDK라고 부릅니다.
- 우리 PC에는 JDK version 17을 설치했습니다.
- 개발의 편의 위한 툴 IDE => 이클립스(eclipse)를 사용합니다.
- 주석
	// 한줄주석
	/* 여러줄주석
		여러줄주석 */

- 자바코드를 사용하여 개발 -> javac 컴파일 -> 바이트코드(.class)
   -> java 프로그램을 통해서 실행시킵니다.
   
- 변수 : 자료형별로 선언하는 예약어가 다릅니다.
1. 정수형 : 소숫점없는 숫자를 대입시킵니다.
	- byte : 1byte : -128~127
	- short : 2byte
	- int : 4byte : 기본형
	- long : 8byte
2. 문자형 : '' 안에 한글자를 대입시킵니다.
	- char : 2byte : 유니코드 : utf-8
3. 실수형 : 소수점 있는 숫자를 대입
	- float : 4byte
	- double : 8byte : 기본형
4. 논리형 : true 또는 false 를 대입합니다.
	- boolean : 1byte
	
변수이름을 만들때?
- 변수이름은 영문자, 숫자, _, $ 를 사용할 수 있습니다.
- 변수이름의 첫글자로 숫자는 사용할 수 없습니다.
- 변수이름을 정할 때 주로 첫글자는 소문자를 사용하고,
	Camel 표기법을 사용합니다.
	예) int studentId;

자료형에서
- 작은공간을 차지하는 자료형은 큰공간을 차지하는곳으로
	자동이동(자동형변환)이 가능합니다.
- 큰공간에 있는것을 작은 공간으로 복사할때는 강제 형 변환을 해야합니다.
	예) int iNum = 10;
		byte bNum = (byte)iNum;

* 자동형변환이 되는 경우
1. byte -> short -> int -> long
2. float -> double
3. int -> float(double)
4. long -> double				